[{"content":"Welcome! Select a chapter from the menu on the left. See the About page for more information about this resource.\n","date":1508426775,"description":"Home page","lastmod":"2019-10-26T15:26:15Z","objectID":"3976528693a0108357f4928017600865","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/","publishdate":"2018-11-23T15:26:15Z","title":"Home"},{"content":"This site contains a collection of lectures, assignments, and instructor materials for teaching software engineering or development, at an intermediate level. It is assumed that students already know basic software engineering terms and skills.\nMaterials are used for the ITEC 3870 Software Development course sequence taught at Georgia Gwinnett College. They were developed by Cengiz Gunay and Anca Doloc-Mihu, supported by an Affordable Learning Georgia grant at inception in 2019-2020 and by a continuation ALG grant for further development in 2020-2021.\nOther contributors (in alphabetical order of last name):\nAlex Abraham Ryan Cosentino Kristoffer Hendricks Safiyullah Khan Christopher Martinez Shaun Mitchell Roberto Salas Montoya Keyvan Shabani Slides are offered with the license: CC BY-SA 4.0. To modify and use these materials in your classes, fork the Github repository or use the edit link at the bottom right of each page.\n","date":1508426775,"description":"About this Site","lastmod":"2019-10-26T15:26:15Z","objectID":"6083a88ee3411b0d17ce02d738f69d47","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/about/","publishdate":"2018-11-23T15:26:15Z","title":"About this Site"},{"content":"Select a chapter from the menu.\n","date":1603121175,"description":"Instructor Materials. Email authors for hidden materials like quizzes and their keys.","lastmod":"2020-12-20T15:26:15Z","objectID":"9e6a1416d4bf7d2fcfc2765ce90e972f","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/","publishdate":"2019-11-23T15:26:15Z","title":"Instructor Materials"},{"content":"This section includes all the small assignments for the course.\nAssignments are marked as individual or team to clarify for students what type of submission is expected.\nEach assignment includes two parts:\nInstructor Instructions: Includes suggestions for setting up the particular assignment (like, time-wise, platform,etc).\nPosting for Students: The text can posted to students.\nSome assignments are split into several mini-assignments such that each mini-assignment can be assigned at its own deadline. However, in the grade book all parts are summed up into one assignment, for example \u0026amp;lsquo;grade of Assgn 1a\u0026amp;rsquo; + \u0026amp;lsquo;grade of Assgn 1b\u0026amp;rsquo; + \u0026amp;lsquo;grade of Assgn 1c\u0026amp;rsquo; = \u0026amp;lsquo;grade of Assgn 1\u0026amp;rsquo;\n","date":1603121175,"description":"Assignments","lastmod":"2020-12-20T15:26:15Z","objectID":"a94b5e3a08c53965757cf6617c2bd9f4","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/","publishdate":"2019-11-23T15:26:15Z","title":"Assignments"},{"content":"Assgn 1a (individual): Class Introductions Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them know their teammates and their working times. Suggested time: 3-5 days Posting for Students:\nPost a quick resume here\nIn your resume, include:\nYour photo/selfie Your name (also indicate preferred name) Concentration/year Previous courses (optionally grades) Skills (computer languages, platforms, etc) Interests (keep it relevant) Expertise in software development tools (IDEs, version control, build tools, etc) Past software projects (briefly explain the scope and your role) Work hours and availability (will help to form teams with similar students) We will use this information for picking teams and project roles.\n","date":1603121175,"description":"Assgn 1a","lastmod":"2020-12-20T15:26:15Z","objectID":"c5967a23007dd70a42a4a21cb20803b4","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn1a/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 1a"},{"content":"Assgn 1b (individual): Accounts set up Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help students and instructor throughout the semester. Suggested time: 3-5 days Instructor needs to post here the links to the Discord channel, Piazza class, Jira server (we do not include these here since they are private domains only for the course students). Posting for Students:\nSet up your accounts\nThis semester we will use several tools for communicating and version control that are commonly used in the industry. As software developers, you need to get familiarized with these tools.\nPost a followup below with your accounts on:\nDiscord\nGithub\nJira (later)\nLinks for these can be found here (post).\nWe will be using Github organization \u0026amp;ldquo;GGC-SD\u0026amp;rdquo;. Post your Github account here so we can add you to it. Use the \u0026amp;ldquo;followup discussions\u0026amp;rdquo; so we know who you are.\nWe are using Discord for fast communication. Post your Discord nickname/ID so I can add you to our server.\n","date":1603121175,"description":"Assgn 1b","lastmod":"2020-12-20T15:26:15Z","objectID":"fc90df49771d31743e90148da76e6005","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn1b/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 1b"},{"content":"Assgn 1c (individual): Soft Dev Articles Discussion Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them see different points of view. Suggested time: 7 days Posting for Students:\nPost essay about articles\nRead the following articles. Post your point of view on each topic.\nNext class, we will have a class discussion on Software Development vs Software Engineering.\nArticles:\nSoftware Development versus Software Engineering\nDr Dobbs: Engineering not Computer Science\n","date":1603121175,"description":"Assgn 1c","lastmod":"2020-12-20T15:26:15Z","objectID":"c4def7dd927d5d650799c196e39d437c","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn1c/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 1c"},{"content":"Assgn 2a (individual): Git and Bash Instructor Instructions:\nFor this assignment students submit directly on Github repo. Instructor needs to have this repo available for the students and to replace our repo link at Step 4 of the exercise. Suggested time: 7 days Posting for Students:\nPractice assignment for Git+Bash\nOverview Download Git from https://git-scm.com/ Start “Git Bash” (or \u0026amp;ldquo;Git Shell\u0026amp;rdquo;) on Windows, or open a Terminal on Mac Configure username, email, and editor in git Fork repo https://github.com/cengique/bash_basics on Github Clone your repo to your local computer in Git Bash Make changes: Create a folder with your name, add a Bash script that prints your name Add your file to git Commit changes Push changes Create pull request Step by step instructions Step 1 \u0026amp;amp; 2: Download Git and start a shell All Git downloads can be found on https://git-scm.com/downloads\nOn Mac, open a terminal and type git to check if you have it already installed. Otherwise, you have two options, (1) install XCode from the App Store, but note that it is a large download; or (2) download the package from the link above. The rest of the assignment can be performed in the terminal console. On Windows, download the package from the above link. During installation it will ask you to choose a text editor. DO NOT SKIP THIS STEP! Pause the installation and install one of the editors on the list (Atom, Sublime Text, Notepad++, etc). Otherwise, you will have to set this up manually in the steps below, which is much harder. After installation completes, start the “Git Shell” from Programs. Note that inside the bash shell the folder separators will be forward slashes (/) instead of backslashes (\\). Step 3: Configure username, email, and editor in git git config --global user.name \u0026amp;quot;Your Name\u0026amp;quot; git config --global user.email \u0026amp;quot;\u0026amp;lt;Your Email\u0026amp;gt;\u0026amp;quot; (Make sure email matches Github account, or simply add one more email to Github) git config --list (Shows current …","date":1603121175,"description":"Assgn 2a","lastmod":"2020-12-20T15:26:15Z","objectID":"5bb725f84dffbe8eb488201ea79dfd67","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn2a/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 2a"},{"content":"Assgn 2b (individual): Git branching \u0026amp;amp; merging Instructor Instructions:\nFor this assignment students submit directly on Github repo. Instructor needs to have this repo available for the students and to replace our repo link at Step 4 of the previous exercise (Assgn 2a). Suggested time: 7 days Posting for Students:\nPractice assignment for Git+Bash\nGit Practice #2: Checkout and branch Note: Always prefer the official Git documentation and its reference manual to learn about the git commands rather than following random, outdated, and misleading tutorials from the web. If you don\u0026amp;rsquo;t remember syntax of a specific git command, try the --help option (e.g., git commit --help). Two exceptions I will recommend are the simple git guide and Learn Git Branching - a testing environment for you to play around branches.\nPart I: Parallel universes This exercise will make changes in one file in two parallel branches.\nGo back to your clone of bash_basics on your computer. Pick any one of the numbered Bash scripts. Run it using sh \u0026amp;quot;name of script\u0026amp;quot; in your Git Bash to see what it does, and then do the exercise described in the comment section at its end by adding new commands to the file. You can look inside the basics.sh file to get some hints, or use the Conquering the Command Line book. Add and commit your edited file, and push back to your own Github fork like last time (Note: If you\u0026amp;rsquo;re committing to a new branch name, make sure to git push --set-upstream origin \u0026amp;quot;name\u0026amp;quot;, like we did in the previous assignment). Now, we will look into the history to see a suitable place to travel back in time before our last commit. Use the git log command (or the commit lists in the UIs) to find the ID# of your first commit from last assignment. Press \u0026amp;ldquo;q\u0026amp;rdquo; to quit from the git log command. The actual time travel is achieved by using the git checkout \u0026amp;quot;ID#\u0026amp;quot;command, using the \u0026amp;ldquo;ID#\u0026amp;rdquo; from the previous step, which will transform your code …","date":1603121175,"description":"Assgn 2b","lastmod":"2020-12-20T15:26:15Z","objectID":"7cd2641e6509d7664859d83e095e43e6","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn2b/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 2b"},{"content":"Assgn 3a (team): Projects descriptions \u0026amp;amp; team formations Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them form teams. Suggested time: during class or end of the day of the class Posting for Students:\nThis is the list of projects available to work on this semester:\nProject 1 title Client:\nDescription:\nTechnology, if any:\nProject 2 title Client:\nDescription:\nTechnology, if any:\nPlease read the project description (we will discuss them briefly in class) and decide on which project you would like to work on. Also, select your own team and convince your team to work on the project (we will work on this in class). Then, decide on the team name and post it below, along with the names of the team members and the project name. Chose a meaningful fun team name; it will be your Github project name. We will use this for naming the Discord channel and Github team code repo. Give exact spelling.\nRule: Teams must be at least 3 and up to 4 people. Exception; to be a 5-person team, you really need to justify why you need so many people. That doesn\u0026amp;rsquo;t mean \u0026amp;ldquo;oh this project is so big!\u0026amp;rdquo;, you have to clearly separate the work into different members. While teams of 2 will be allowed under some circumstances, I highly suggest to avoid them, since projects have many tasks and you will get easily overwhelmed by the amount of work.\nPost under the format:\nProject name:\nTeam name:\nMember 1:\nMember 2:\nMember 3:\nMember 4:\n","date":1603121175,"description":"Assgn 3a","lastmod":"2020-12-20T15:26:15Z","objectID":"db214ab522a2bd7b8f38221aa8b3585b","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn3a/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 3a"},{"content":"Assgn 3b (team): Client meeting and Requirements Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. Suggested time: 7-10 days Posting for Students:\nClient meeting and Requirements\nContact your client(s) and have a meeting with him/her/them this week:\nSet up a meeting with the clients. Ask them to give you 2-3 times, or simply offer several options yourself to speed up the process. CC me on your email to your client.\nPost files in your team repo reflecting the log of the client meeting and the requirements document (1-2 pages) explained below. Make a folder /doc in your repo and put these files within this folder.\nRequirements report:\nMake a folder called docs_Fall2020/ in your repo. This will be the folder where you will be submitting your project documents throughout the semester.\nThink of each person\u0026amp;rsquo;s skills and what you\u0026amp;rsquo;d like to learn to pick a platform and framework to learn and use this semester.\nMake a new list of requirements.\nRequirement list should include:\npriority\njustification\nseparation of functional, non-functional, and domain requirements\n","date":1603121175,"description":"Assgn 3b","lastmod":"2020-12-20T15:26:15Z","objectID":"668a8a9d0743da06db5eec37128e991b","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn3b/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 3b"},{"content":"Assgn 4a (individual): Project roles Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them work with their teammates. Suggested time: 3-5 days Posting for Students:\nProject Roles:\nProgrammer\nSet 1:\nCode architecture/lead programmer - in charge of the framework, components, coding style, and programming. It doesn\u0026amp;rsquo;t mean the only programmer! Everyone must program, lead programmer decides on the overall design and coding standards. UI/UX design: User Interface and User eXperience. Make mock UI designs and user-friendly navigation. Implements and tests interface. Data modeler: Implements Database, data files, server-client structure, and data structures. Set 2:\nTeam manager: Sprint planning, and time accounting for the team. Client liaison: Communications, demos, and negotiations with the client, what was done and planned to handle the client\u0026amp;rsquo;s requirements (role can be combined with the manager) Documentation lead: Setup documentation conventions for code and project, then delegate work onto teammates. Manage presentations, reports, and licensing documentation. Every one must add documentation! Testing lead: Setup testing framework and conventions. Use continuous integration to test at each commit/push. Everyone must do their own testing! In addition to the programmer role, each team member has 2 roles within the team, one from Set 1 and one from Set 2. These are roles you can pick. Later in the semester, you would need to give a presentation on your primary role, or it could include a mix of two roles. If multiple team members are working on the same role, the grade will get divided among them. You must have a primary role to get full points.\nNote that all roles are mandatory and each person in the team may need more than one role in order to get full points on the project.\nAssignment requirements:\nEach person must pick one or more roles from the list above. Each …","date":1603121175,"description":"Assgn 4a","lastmod":"2020-12-20T15:26:15Z","objectID":"08e7237277037df7be1c807eee581c73","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn4a/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 4a"},{"content":"Assgn 4b (individual): Role in Markdown in Readme.md repo Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them work with their teammates.. Suggested time: 7-10 days Posting for Students:\nProject Roles:\nJust to be clear! Everyone in the team MUST do code implementation in order to pass this class. In addition to the programmer role, each team member has 2 roles within the team. These are roles you can pick. Later in the semester, you would need to give a presentation on your primary role, or it could include a mix of two roles. If multiple team members are working on the same role, the grade will get divided among them. You must have a primary role to get full points.\nCode architecture/lead programmer: framework, components, coding style. Doesn\u0026amp;rsquo;t mean the only programmer! Everyone must program, lead programmer decides on the overall design and coding standards. UI/UX design: User Interface and User eXperience. Make mock UI designs and user-friendly navigation. Data modeler: Database, data files, server-client structure, data structures. Team manager: Sprint planning, and time accounting for the team. Client liaison: Communications, demos, and negotiations with client, what was done and planned to handle client\u0026amp;rsquo;s requirements (role can be combined with manager) Documentation lead: Setup documentation conventions for code and project, then delegate work onto teammates. Manage presentations, reports, and licensing documentation. Everyone must add documentation! Testing lead: Setup testing framework and conventions. Use continuous integration to test at each commit/push. Everyone must do their own testing! Note that all roles are mandatory and each person in the team may need more than one role.\nAssignment requirements:\nEach person must pick one or more roles from the list above. Each team must have all of the roles distributed among its members. Access your team …","date":1603121175,"description":"Assgn 4b","lastmod":"2020-12-20T15:26:15Z","objectID":"73ae30dc218dc4881046630242be30c6","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn4b/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 4b"},{"content":"Assgn 5a (individual): Jira practice Instructor Instructions:\nStudents will submit directly on Jira server. Instructor must provide students a Jira project link where they will practice on the server. Suggested time: 7 days Posting for Students:\nPractice assignment for Agile progress tracking in JIRA This is a practice assignment, do not put your actual project user stories here. We will create mock versions of sprints, epics, user stories, and subtasks.\nEven though JIRA is not your progress tracking tool of your choice this semester, we will use it to practice Agile concepts. Look into the Atlassian documentation for JIRA here to get started or if you get stuck in any of the following steps.\nSteps Look in your GGC email for an invitation from me into your JIRA account.\nLog into JIRA using the link on the course page.\nUnder the Projects menu, click View all projects and find project title given in the assignment post. Select the Backlog from the left side menu - it is the default screen when you open a project.\nIf noone in your team has done it yet, create a new Epic name \u0026amp;ldquo;team name/project name\u0026amp;rdquo; with the summary \u0026amp;ldquo;a team (team name) of students can develop (project name)\u0026amp;rdquo;, where you replace \u0026amp;ldquo;team name\u0026amp;rdquo; and \u0026amp;ldquo;project name\u0026amp;rdquo; with the respective names from your currently assigned team project. To create the Epic, click on the Create button on top of the screen and select the appropriate options.\nUnder your team Epic, create one User Story for yourself. In the Epic detail view, click on the \u0026amp;ldquo;+\u0026amp;rdquo; sign on the Issues section. Alternatively, use can still use the Create button, but make sure you select the Epic to link at the bottom of the form. The story should explain your role in the project, such as \u0026amp;ldquo;Developer (name) will (your role in project) such that (reason for selecting role)\u0026amp;rdquo;. Assign this story to yourself.\nDrag your personal story from the backlog list into the current Sprint. Add a difficulty …","date":1603121175,"description":"Assgn 5a","lastmod":"2020-12-20T15:26:15Z","objectID":"e83dd4a5ff2b025bed8fb0e5463fe5f0","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn5a/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 5a"},{"content":"Assgn 5b (team): Jira - Add user stories to team progress tracker Instructor Instructions:\nStudents submit directly on Jira server. Suggested time: 7 days Posting for Students:\nEach team member is responsible for:\nhaving registered into the progress tracker selected for your team, contribute to creating epics/user stories/tasks (created by the user), having a user story/task/chore assigned, and keeping track of the times s/he spent on studying/preparing/working on tasks. Epics/User stories (use \u0026amp;ldquo;Issues\u0026amp;rdquo; in JIRA) must have:\nTitle/Summary: answers to who, what, why questions. Example: \u0026amp;ldquo;As a user, I need to do something because of some reason\u0026amp;rdquo; Story points/difficulty/estimate: A previously agreed-upon numbering grade that indicates difficulty. Priority (ordering/drag-drop is fine) Epics are optional; use them sparingly. User story subtasks must have:\nInformative and detailed title and proper system requirement details Estimated hours that you think it\u0026amp;rsquo;s going to take Continuous tracking of your hours as you work on it Been assigned to a person Make sure that user stories are substantial. Some tasks can be added as chores instead of user stories. User stories must be from the perspective of the user, and NOT from the perspective of the developer. Eg., \u0026amp;ldquo;adding color/button for login to interface\u0026amp;rdquo; is not a user story; it can be added as a subtask of a user story or as a chore.\n","date":1603121175,"description":"Assgn 5b","lastmod":"2020-12-20T15:26:15Z","objectID":"78168aa74e6986f863b5043bc085564b","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn5b/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 5b"},{"content":"Assgn 6a (team) - CREATE abstract Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them work with their teammates.. Suggested time: 3-5 days Posting for Students:\nGeneral CREATE event:\nWhen: Thu Nov 12th, 2-3:15 pm\nWhere: online\nBy Oct 7th, we need to receive one abstract from each team. You can post them below as a follow-up. Information you need to include:\nProject title:\nStudent names:\nA short abstract (max 150 words):\nHere are 2 example abstracts:\nVSEPR Venture\nAs part of our Software Development II course with Dr. Cengiz Gunay, we have been working on VSEPR Venture. In VSEPR Venture, the player is given the name of a molecule and given the task of collecting atoms and correctly putting them in a molecular structure that represents that molecule. The game contains many levels and varying difficulties to help the player learn basic concepts of the VSEPR theory.\nChemXplosion\nAs part of our Software Development II course with Dr. Cengiz Gunay, we have been working on ChemXplosion. In ChemXplosion, the player is given a puzzle and given the task of collecting the right element and correctly putting them in the equation right. The game contains many levels and varying difficulties to help the player learn basic concepts of Stoichiometry.\nDetails on the schedule and the rooms will be announced later.\n","date":1603121175,"description":"Assgn 6a","lastmod":"2020-12-20T15:26:15Z","objectID":"ba339526eae33af8f97ed2020fe18f1a","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn6a/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 6a"},{"content":"Assgn 6b (team): Project Flyer for CREATE Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them work with their teammates.. Suggested time: 3-5 days Posting for Students:\nPost a good looking flyer of your project\nFlyer should include Project title, Team name, Names of all team members, and a nice design showcasing your project most important feature(s) (optional a short naration about the project can be incorporated).\nFlyer should be as png or jpg images, or pdf file.\n","date":1603121175,"description":"Assgn 6b","lastmod":"2020-12-20T15:26:15Z","objectID":"3d4a77880ac2f98a7dd9934e759ecafd","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn6b/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 6b"},{"content":"Assgn 7 (individual): JSON quiz Instructor Instructions:\nSuggested time: 3-5 days Posting for Students:\nJSON Quiz\nSubmit your JSON results obtained by taking the JSON quiz at the link below. To get full points you need to score at least 70% on the quiz at the point. You can take several quizzes and submit your best score. Note: you need to create a free account to access these materials.\nJSON quiz\nHelp:\nStanford JSON quiz\nIntro to JSON\nJSON Demo\n","date":1603121175,"description":"Assgn 7","lastmod":"2020-12-20T15:26:15Z","objectID":"4e6eb297d9a4693a59ffae9288c8439d","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/assgn7/","publishdate":"2019-11-23T15:26:15Z","title":"Assgn 7"},{"content":"Presentations (individual): Tools and Articles Instructor Instructions:\nThis assignment should be posted on the class platform to allow all students to see each other entries. This will help them learn from their teammates presentations. Suggested time: after midterm till end of semester Presentation Time: 20 min/ student Posting for Students:\nTools and Articles - presentations guidelines\nEach of you must either pick an article or one of the tools in any of the below topics during this semester. You must do all of the following:\nselect your tool/article and post its name below as a followup, along with the date you prefer to present it\nsubmit a presentation file before the presentation time as a followup below; if you present a tool and show a demo then you also must submit your code files in a zip\npresent for 10-15 minutes in class\nImportant: when you\u0026amp;rsquo;re picking a tool/article, give me 2-3 dates when you can present it, so I can schedule the presentation. Last class you can schedule your presentation is Nov 5th, 2020.\nTwo types of TOOL presentations are allowed:\nIn-depth look at a tool with new information (has to be distinct from previous presentations on the same topic and must refer to them). Include your code demo of how it works on 2-3 tasks, show, and explain code.\nComparison of several tools using tool presentations from previous semesters to recommend one for a use case. Include your demo of how they work on 1-2 tasks, show, and explain code in all the tools you selected. Make your comparison point(s) via the code.\nThe in-depth look presentations will be graded based on the existence of the following information:\nBasic description of the tool. You can include live demos or online videos. Make sure everyone can get a grasp of the basic principles. Refer to and compare with info from previous presentations. Who uses it? Which companies are known to use this? How is it useful for us? Would you use it? How does it compare with other tools in the same …","date":1603121175,"description":"Presentations","lastmod":"2020-12-20T15:26:15Z","objectID":"41ca02bdd05a218e712ac3a82921b83a","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/assignments/presentations/","publishdate":"2019-11-23T15:26:15Z","title":"Presentations"},{"content":"Exams There are two take-home exams during the semester, each with weight of 10 pts of the fnal grade. See next for the exam questions.\n","date":1603121175,"description":"Exams","lastmod":"2020-12-20T15:26:15Z","objectID":"326e4c3e83433151edcdc7fadb35e00d","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/exams/","publishdate":"2019-11-23T15:26:15Z","title":"Exams"},{"content":"Final Instructions:\nRecommended work time 240 minutes.\nRecommended Period: one week\nStudents can leave the work, save it, and return later to pick up where they left.\nTotal points 100 (100%).\nQ1: Team Process (20 pts) Write an insightful analysis of the software process your team used during the project throughout the semester by answering the following questions:\nPart A (10pts): Identify 3 positive principles about teamwork and approach to software development that you observed and followed in your semester-long experience. Explain why it worked well and why. They must be specific to your team project, otherwise you do not get full points.\nPart B (10pts): Explain 3 issues that went wrong with your team project, and how you would modify the process if you had to do it all over again. I\u0026amp;rsquo;m not asking about small technical problems you encountered, but about the whole semester-long experience. Examples of issues would be on sprint planning, team roles, estimation and assignment of tasks, communication, etc.\nQ2: Personal Role (15 pts) Each team member had a specific role to play in the project, which changed over time. Please answer the following questions about your personal role(s):\nPart A (5pts): What were your roles in the each of the iterations this semester? Explain what was your strategy for selecting your initial role(s). Describe the duties (tasks) expected of and product outcomes specific to your role(s). How did your role change over iterations, and what were the reasons?\nPart B (5pts): What were the biggest challenges you faced in accomplishing those duties? In what ways do you feel you did a good job in your role? If you had the same role for another project beginning next week, what would you do differently?\nPart C (5pts): Do you feel your role was harder, easier, or equivalent to other roles in the project? Compare it to each of the other roles in your team, and give each role a score between 1 (easiest) to 5 (hardest). Note that this is not the …","date":1603121175,"description":"Final","lastmod":"2020-12-20T15:26:15Z","objectID":"b2f86f27774e23dbabb3730258e30928","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/exams/final/","publishdate":"2019-11-23T15:26:15Z","title":"Final"},{"content":"Midterm Instructions:\nRecommended work time 180 minutes.\nRecommended Period: one week\nStudents can leave the work, save it, and return later to pick up where they left.\nTotal points 50 (100%).\nThere are Bonus points included for students who want to answer to these questions.\nQ1: Agile Methodology (10 pts) During the last decade, Agile Methodology has become a very popular software process model, which is supported by the State of the Agile report.\nPart A (5pts):\nA1. (3pts) Based on the data in this report (read The 14th annual STATE of AGILE Report, 2020), what are the top 3 features of Agile that are different from the traditional software engineering approach and make it so popular? Justify your selections by giving reasons.\nA2. (2pts) Research and list 3 weaknesses of Agile you think makes it less desirable. Your answers must cite numbers/info in the latest report The 14th annual STATE of AGILE Report, 2020.\nPart B (5pts):\nB1. (2pts) Explain why you think Agile is (or is not) an appropriate process model for your class team project. Construct a convincing argument that includes whether stand-up meetings, sprint planning, user stories, and retrospectives are useful, and whether other Agile features are useful for your team.\nB2. (3pts) Create two semester-long development plans for your current project: one using a Waterfall model, and another one using an Agile model, and then compare the two.\nQ2: Object-oriented Design (10 pts) Answer BOTH of these questions based on information from multiple sources:\nPart A (5pts): What is the main purpose of object-oriented (OO) design and programming, and why did it become so popular in the software world? Is that popularity fading? Do some research and discuss about its weaknesses. Discuss when it is proper to use full-fledged OO design versus when it is excessive. Give examples of popular languages, frameworks, or use-cases that are not object-oriented. Give references to your sources.\nPart B (5pts): Choose one OO design …","date":1603121175,"description":"Midterm","lastmod":"2020-12-20T15:26:15Z","objectID":"d95635c63bd499c0f495b3f5806a0170","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/exams/midterm/","publishdate":"2019-11-23T15:26:15Z","title":"Midterm"},{"content":"Grading overview The overall ratio is about half between individual and project work (with bonus points):\nPercent Grade category 10% Presentations (Article Reading + Software Tool) \u0026amp;amp; lab session attendance 15% Small individual assignments (including team formation and project selection) 5% In-class quizzes 20% Take-home mid-term and final exams (10% each) 50% Team Project, includes individual and team components: Team peer review (multiple times) Individual Role Presentation \u0026amp;amp; Execution Individual Team/Client Communication Proper and efficient use of Version Control Waterfall steps of requirements, design, implementation, and testing Team Release \u0026amp;amp; Demo Plans and Execution Team Documentation \u0026amp;amp; Delivery Report ","date":1603121175,"description":"Gradebook","lastmod":"2020-12-20T15:26:15Z","objectID":"13b75dfddc354d97474fe3b0aad68e8b","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/gradebook/","publishdate":"2019-11-23T15:26:15Z","title":"Gradebook"},{"content":" Week#ModuleSetupTopicHands-onAssignment ","date":1603121175,"description":"Schedule","lastmod":"2020-12-20T15:26:15Z","objectID":"d047b671a88d2c4437317d9fb74b8e91","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/schedule/","publishdate":"2019-11-23T15:26:15Z","title":"Schedule"},{"content":"Syllabus Example Syllabus which includes learning outcomes, textbook, schedule and details about the course organization.\nParts that instructor needs to change to his/her own data are emphasized in yellow.\nDownload pdf of Syllabus here.\nDownload word doc of Syllabus here.\n","date":1603121175,"description":"Syllabus","lastmod":"2020-12-20T15:26:15Z","objectID":"2dbf0565756b6df943a700c93c819e80","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/instructor/syllabus/","publishdate":"2019-11-23T15:26:15Z","title":"Syllabus"},{"content":"Select a chapter from the menu.\n","date":1603121175,"description":"Student Materials","lastmod":"2020-12-20T15:26:15Z","objectID":"d9abbfdff770a90a77fcbeafefb538ab","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/","publishdate":"2019-11-23T15:26:15Z","title":"Chapters"},{"content":"Agile Development ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Technology Overview, Next - Agile Values and Principles What is AGILITY? What does it mean to be AGILE?\nAgile Process The current standard for software development\nWaterfall = sequential assembly line What is wrong with Waterfall? In 1990s, software industry abandoned waterfall-style development and introduced AGILE\nManifesto for Agile Software Development \u0026amp;ldquo;We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:\nIndividuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan That is, while there is value in the items on the right, we value the items on the left more.”\nKent Beck et al\nAgile Statistics The 14th annual STATE of AGILE Report, 2020\nAgile Statistics The 14th annual STATE of AGILE Report, 2020\nAgile Statistics The 14th annual STATE of AGILE Report, 2020\nAgile Statistics The 14th annual STATE of AGILE Report, 2020\nAgile Statistics The 14th annual STATE of AGILE Report, 2020\nPrev - Technology Overview, Next - Agile Values and Principles ","date":-62135596800,"description":"","objectID":"10982256fb9e8de7109341557b86ee00","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-agiledevelopment/","title":"Agile Development"},{"content":"Kanban ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Scrum, Next - Requirements in Agile Kanban Kanban is a management method helping teams to visualize their work to understand it better, which helps to identify and eliminate bottlenecks, and maximise efficiency (flow). It is the Japanesse word for visual signal. The original author of Kanban was Taiichi Ohno and it was used by Toyota for the first time.\nA Kanban Board keeps everyone in the team on the same page.\nTeams build a Kanban board filled with Kanban cards and set up a work flow limit.\nKanban cards One Kanban card per user story, which means one card per work item.\nThe size of the work item should not be either too small or too big. Cards should have:\ntitle, description, owner, any other helpful information like due date As card moves on the board from left to right on the stage of the workflow, the card gets some history (i.e., messages from the teammates).\nKanban cards should be small enough such that team makes progress on them in a reasonable amount of time.\nKanban work flow Work flow: cards moving from left to right\nBenefits of Kanban board reveals bottlenecks in workflow (cards not moving forward) get a sense of the size of the cards team can move forward in a timely matter a visual assurance that the work is done Measuring workflow lead time = the time it takes a card to move from the backlog to finish on the board\nIn agile, if values are combined with Kanban characteristics, the outcome would be Agile Kanban. This practice is gaining popularity in Software Developmement, and it means that the Agile iteration approach and Kanban value stream focus are combined.\nPrev - Scrum, Next - Requirements in Agile ","date":-62135596800,"description":"","objectID":"2e15fc0e429e9259bc9f4e4d5a244481","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-agiledevelopment/chapter-kanban/","title":"Kanban"},{"content":"Agile Values and Principles ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Agile Development, Next - Scrum What is \u0026amp;ldquo;AGILITY\u0026amp;rdquo;? What does it mean to be AGILE?\nWhat is \u0026amp;ldquo;AGILITY\u0026amp;rdquo;? Effective (rapid and adaptive) response to change Effective (rapid and adaptive) communication among all stakeholders The CLIENT is part of the TEAM The TEAM is in control of the work performed resulting in rapid, incremental delivery of software\nAgile Process User Scenarios are descriptions of what is required (requirements) and drive the entire production process Plans are short-lived and can change frequently Software is developed iteratively and is delivered after each iteration Adapts as changes occur Agile is based on 4 values and 12 principles Agile Values Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan Agile Principles Satisfy the Customer Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\nWelcome Change Welcome changing requirements, even late in development. Agile processes harness change for the customer\u0026amp;rsquo;s competitive advantage.\nDeliver Solutions Frequently Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\nAgile Principles (cont.) Work Together Business people and developers must work together daily throughout the project (one team).\nEmpower \u0026amp;amp; Trust Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\nFace to Face Conversations The most efficient and effective method of conveying information to and within a development team is face–to–face conversation.\nAgile Principles (cont.) Working Solutions Working software solutions are the primary measure …","date":-62135596800,"description":"","objectID":"3361e5f40a770cb713abc67c0df8a57b","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-agiledevelopment/chapter-principles/","title":"Agile Values and Principles"},{"content":"Scrum ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Agile Values and Principles, Next - Kanban Scrum * Originally proposed by Jeff Sutherland in 90s, then improved by Schwaber and Beedle * In 1993, J. Sutherland borrowed term ‘scrum’ from Takeuchi and Nonaka, “The New Product Development Game”, Havard Business Review, 1986 * Takeuchi and Nonaka compare high-performing, cross-functional teams to the scrum formation used by Rugby teams. Scrum * In rugby scrum is the power struggle between two teams to advance on the field * It requires complete team work, hard work, and strength. That meaning translates to software development See original article from Scrum Alliance\nScrum and Agile Scrum is one of several agile frameworks. Scrum is the most popular agile framework.\nScrum Definition Scrum: An [agile] framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.\nScrum refers to a lightweight framework that is used in every industry to deliver complex, innovative products and services that truly delight customers. It is simple to understand, but difficult to master. Scrum fulfils the vision of the Agile Manifesto by helping individuals and businesses organize their work to\nmaximize collaboration, minimize errors, deliver frequently, and create multiple opportunities to inspect and adapt. Scrum Guide, November 2017 version\nHow Scrum works Scrum works by delivering large projects in small chunks of the product that a team can begin and complete in one, short timeboxed iteration called sprint.\nScrum is also both iterative and incremental. Scrum Framework People are the focus of Scrum.\nScrum Teams include people with diverse skillsets; each team has all of the capabilities necessary to deliver a piece of functionality from idea to delivery. Sprint is a short (one to four weeks long) timeframe during which the team works on some …","date":-62135596800,"description":"","objectID":"d4f93296160149860fba04ae846614f6","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-agiledevelopment/chapter-scrum/","title":"Scrum"},{"content":"Re-introduction to Software Engineering ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Chapters, Next - Career Advancement Tips Welcome What\u0026amp;rsquo;s better than to start the semester with a quiz? Logistics heads-up:\nUsing Reddit for forum discussion and Q\u0026amp;amp;A support Using Discord and Github organizations with previous members Everything online this semester, will meet on live video on Discord Any problems, potential issues? What\u0026amp;rsquo;s happening? Welcome Soft Dev 1 students\nProjects, working with external clients (mostly GGC faculty/students) 3 phases of project work, peer review in each with dire consequences\u0026amp;hellip; 2 take-home exams about project work and many pop-up quizzes for textbook/slides knowledge Few small assignments Few team presentations Individual presentations for team role, article, and/or software tool Tool/article presentations Throughout semester I\u0026amp;rsquo;ll let you research topics so we all learn more about options out there:\nEach student will pick one item in any of the topics by a given deadline You will give a presentation in class and post your summary After everyone presents for one topic, we discuss in class Topics will be posted later, but will include:\nTools: Web frameworks (MEAN, .Net, JSP/JSF, PHP, …), Frontend frameworks (jQuery, Bootstrap, …), IDEs, Version control software (git, mercurial, …) and online portals (Github, Bitbucket, Gitlab, …), Project tracking tools (JIRA, Trello, Pivotal Tracker, Rally, Version One, …), Database engines (MySQL, PostGreSQL, MS SQL Server, Oracle, …) Articles: Influential articles, novel technologies, arguments, career topics, etc. Meet your instructor Instructor: Dr. Cengiz Gunay\nSoft-Eng-Practicum Github Organization\nEmail: cgunay@ggc.edu\nOffice: Virtual and W-2117 (by appointment)\nPhone: 678-951-9621 (also GroupMe)\nthinks he\u0026amp;rsquo;s funny\nAbout the instructor: Dr Cengiz Gunay Self-taught programmer In elementary school, started programming with …","date":-62135596800,"description":"","objectID":"080b37ae39eb6a14aeb12b2b9b918708","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-intro/","title":"Re-introduction to Software Engineering"},{"content":"Career Advancement Tips ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Re-introduction to Software Engineering, Next - Technology Overview Be more proactive to advance your career Technology world is very competitive Going through classes and getting a degree by itself is not enough What else can you do? Performance at whiteboard/online coding interviews, Public project activity, Community involvement, etc An incredible opportunity for advancement: Hackathons Pros and Cons of hackathons Pros:\nFree events in the area (or in nearby towns) or online since COVID Organized by college students for students You can join one of the many competitions, or just attend workshops Several coding workshops offered, usually with great content Sponsored by industry, with on-site booths where you can apply for jobs Usually offer free buses or travel reimbursement Cons:\nUsually involves 24–48 hours straight, with bare floors as sleeping area Takes away your weekend (but it\u0026amp;rsquo;s still a great value!) Spring: UGA Hacks in Athens, GA Clemson University: CU Hack.it University of Alabama: Auburn Hacks Follow: Grizzly Hacks @ GGC Coming up: Workshop on backend development\nUsing Java Spring Boot This Friday Feb 3rd, 2pm Hybrid format:\neither in Room B-1600 or online on Discord Prev - Re-introduction to Software Engineering, Next - Technology Overview ","date":-62135596800,"description":"","objectID":"c673f4b65e2e7847a3cf2c69b67fb782","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-intro/chapter-career/","title":"Career Advancement Tips"},{"content":"Technology Overview ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Career Advancement Tips, Next - Agile Development Getting out of your comfort zone Forget: Java\nAt least for now. Why?\nIt\u0026amp;rsquo;s not the only language out there: TIOBE Index, Github State of the Octoverse survey, and StackOverflow Developer Survey of 2019 The more languages you are familiar with, the better chances for jobs Knowledge of imperative language like Java easily translates to several other languages (C#, Python, Javascript, C/C++, …) Java is not on the rise, but it\u0026amp;rsquo;s still very popular Web frameworks and languages have transformed application development landscape, especially Javascript (not Java) What\u0026amp;rsquo;s the deal with Javascript? Classical web architecture: Javascript web architecture: Popular Javascript web frameworks Major players; require Node.js on the server\nAngular (Typescript) - a full framework, owned by Google React (JSX) - only a library. Invented by Facebook, but open source now Vue.JS (Javascript) - modeled after legacy AngularJS; lighter, independent, and open source Angular controlled by Google and may change, forces Typescript React needs other framework components Vue is youngest and less docs available Non-JS web frameworks Python Django - Very extensive, open-source framework Flask - Minimal, light, open-source framework C# .Net Core - Controlled by Microsoft, but platform independent Ruby on Rails - Open-source Ruby web framework, lost some steam recently PHP (legacy) – but good with new frameworks Laravel - easy, video tutorials Yii - performant, but steep learning curve Java Java Server Faces (JSF) - Legacy Java Spring - similar to .Net, controlled by Oracle Django comes with admin section. .Net Core: Heavily object-oriented, optional Angular for front-end. Very popular. Mobile hybrid frameworks Hybrid: cross-platform (Android, iOS, …)\nFlutter (Dart) React Native (JSX, HTML, native) Ionic (Angular/React, …","date":-62135596800,"description":"","objectID":"e53dd87c91a1981c86c41aab6f89732a","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-intro/chapter-tech/","title":"Technology Overview"},{"content":"Project Management with JIRA ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Github Social Computing, Next - Project Design and Management Project Management (PM) What is Project Management?\nProject management is the process of matching a project\u0026amp;rsquo;s goals, tasks, and resources to accomplish a goal considering also constrains like limited time, money, and resources (people and tools) with which to accomplish the goal. Project Step 1: Defining the goals of the project entire team must participate each team member must understand these goals step ends with a list of goals and a statement of success Defining success is necessary to make sure there is no ambiguity as to whether the goal has been accomplished or not. It also prevents teams from performing unnecessary iteration and improvement on a goal which has been sufficiently accomplished.\nProject Step 2: Define project tasks/activities Each goal or sub-set of goals should be matched to the tasks required to accomplish them. Team should agree on the tasks that will define the success of each goal.\nProject Step 3: Determine and verify resource requirements The most important here is to be realistic, meaning to determine what resources you need (like people, time, money, space, computers, software, etc.) to get the job done correctly, on time, and on budget. Most common mistake is to underestimate the amount and type of resources required, which leads to projects that run over budget and fall behind schedule. DO NOT: • Squeeze a project into a shorter time frame to please your boss • Cut corners to minimize resource requirements • Plan on a best-case basis, i.e. \u0026amp;ldquo;If everything goes correctly, we will finish on time.\u0026amp;rdquo;\nA good idea is to build in a safety margin of 20% in terms of time and budget, which will give additional time to deal with unexpected occurrences. Once the requirements have been set, it is important to make sure that the team has access …","date":-62135596800,"description":"","objectID":"2f2461324e23907d9fec30e27b95ae90","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-jira/","title":"Project Management with JIRA"},{"content":"Team Roles and Presentation Checklist \u0026lt;!DOCTYPE html\u0026gt; Team manager section:\nBrief recap of your client\u0026#39;s vision\nIn Agile philosophy, people come before tools. How does your team\u0026#39;s existing skills and future goals align with the project scope?\nWhat were your brief list of requirements and how did you turn these into user stories?\nWhat\u0026#39;s your plan for the semester? Outline it roughly, but tell us exactly what\u0026#39;s going into your 1st iteration/sprint and when do you plan to finish it to show it to the client. 1st iteration must be one month or shorter.\nHere\u0026#39;s an example: GGRA project , video\nCode Architecture section:\nJustification and rationale for picking your platform/language/framework.\nA diagram that shows different components of your project and how they relate\nFolder structure that all your team members agreed to follow\nMajor code components (classes, files, controllers, etc)\nSome details of the coding that is coming up\nHere\u0026#39;s an example: CodeArchitecture.pptx, video\nOptional:\nIDE choice\nCode style (spacing, naming, etc)\nAny other relevant information\nUI Designer section:\nExplain existing interface and proposed changes, or show ideas/sketches for new design\nGraphical representation of your UI, could be a mock (use Moqups, Proto.io, UXpin, Marvel, JustInMind, etc.)\nChoose a state or activity diagram to show us the different views and the routes between them\nPrinciples of organization that your teammates will follow to make UI elements\nPlanned future directions\nAny other relevant information\nHere\u0026#39;s an example: UserInterfacedesignv2.pptx, video\nData Model role section:\nA class or entity-relationship diagram that shows different data components\nDatabase engine, file format, code data structures, or any other way you incorporate data into your project and rationale why that was selected.\nFlesh out the details of how the data is going to be accessed (files, scripts, functions)\nAny other relevant information\nHere\u0026#39;s an example: DataModelerPresentation.pptx, example 2, …","date":1603121175,"description":"Project Design and Management","lastmod":"2020-12-20T15:26:15Z","objectID":"de7170a50a9454767df0b7ac2326fa9b","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-project-design/","publishdate":"2019-11-23T15:26:15Z","title":"Project Design and Management"},{"content":"\u0026lt;!DOCTYPE html\u0026gt; Grading Criteria Max Pts Grade item 100 Total student grade w/o bonus 125.33 Total student grade w bonus Team scores will be posted below. Individual grades will be submitted privately in the D2L grades section. They are calculated the same way as in Requirements Phase:\ntotal individual grade = base grade + team score \u0026amp;times; individual effort percent\n30 Base points 30 Individual effort multiplier 70 Team presentation/work 5 Selected tool/article 10 Git commits 5 Client partially functional demo 10 US and tasks progress updated 5 Process tool activity 5 Screencast of demo 10 Coding contribution 5 Other comm 10 Project and code progress 5 Time logging 10 Peer review 10 Iterations and USs updated 10 Client communication 10 Base bonus 2 Bonus effort 5 Iteration plan validated 5 Testing contribution 2 Extra effort 5 Client satisfaction 5 Documentation contribution 5 License/IP 5 Burndown 5 CREATE abstract 5 Demo aligned with requirements 10 Bonus project score 5 README with up-to-date links 5 Other ","date":1603121175,"description":"Client Checkpoint Phase","lastmod":"2020-12-20T15:26:15Z","objectID":"a538bfe2fc009626f1a15bea160ed135","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-project-design/client-checkpoint-phase/","publishdate":"2019-11-23T15:26:15Z","title":"Client Checkpoint Phase"},{"content":"\u0026lt;!DOCTYPE html\u0026gt; Deliverables In the final phase of this semester, you will have these main deliverables:\nApp Factory Demos to outside of class people (usually during a symposium on campus/online in the last week of semester) Final team technical presentation in class (during last week of classes) Demo deliverables (due TBA): Submit these on the forum post as a reply:\nProject flyer: description of functionality with screenshots; include a single letter-size (11\u0026#34;x8.5\u0026#34;) page flyer in PNG format that has a screenshot or artwork and message to be the flash card for your product (see examples from previous semesters at https://soft-eng-practicum.github.io/ )\nIntellectual property agreement signed by all team members and client (don\u0026#39;t post on repo, put it on Reddit)\nApp Factory Demo user testing survey draft - should be couple of questions specific to your project because I will give a second survey with generic questions (see example 1 and example 2)\nProvide a short screencast demoing your product live (prefer a screen recorder with voiceover rather than a hand-held camera). This will be a public video, don\u0026#39;t show private information that you don\u0026#39;t want to share. Upload it to Youtube and provide a link. (see examples from previous semesters at https://soft-eng-practicum.github.io/ ) Final technical presentation (due TBA) and report submission (due TBA) Post these on the forum:\nIn-class presentation file. In your presentation file, make sure to include links for the live product/download/etc if they apply. Make sure they are shareable! See below to see what goes into the presentation. If you don\u0026#39;t want to post your presentation publicly, you can password-protect it. But don\u0026#39;t forget to post that password. Report, including signed agreement/license, screencast video (upload to Youtube and provide link), user testing results from App Factory. Report can be uploaded to your repo. Emails that need to be sent out:\nAll project materials including final deployment to client - …","date":1603121175,"description":"The Last Stretch Phase","lastmod":"2020-12-20T15:26:15Z","objectID":"9fa1d47e0966797833660b081a0a6f16","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-project-design/last-stretch-phase/","publishdate":"2019-11-23T15:26:15Z","title":"The Last Stretch Phase"},{"content":"\u0026lt;!DOCTYPE html\u0026gt; Grading Criteria Max Pts Grade item 100 Total student grade 130 Total student grade with bonus Individual grades and its bonus sum together, and the team points are MULTIPLIED by effort percent of the individual. They will be submitted privately in the D2L grades section. They are calculated tentatively as follows:\ntotal individual grade = base grade + team score \u0026amp;times; individual effort percent\n50 Base points 25 Individual effort multiplier 50 Team score 10 Role markdown 10 Peer review 5 Meeting summary in repo and validated by client 15 2x role presentations 5 Github commits 2 Team name 5 Release waivers 5 Task tracking 5 Team markdown 10 Feedback for presentations 5 Communication (Slack/Discord) 5 Client feedback for mockup 10 User story (estimate, tasks, assigned) 5 Client communications \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; 8 1st iteration plans tracked 2 Bonus effort 5 User stories in backlog 2 Extra effort 12 All role presentations 10 Base bonus 3 Vlogs/presentations submitted 5 Voting for best presentations 5 Comments in tasks 10 Bonus project score 5 (bonus) for best project(s) 5 extra stuff ","date":1603121175,"description":"Requirements Phase","lastmod":"2020-12-20T15:26:15Z","objectID":"d19dd391f25e6982cb6dd7e5d707e933","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-project-design/requirements-phase/","publishdate":"2019-11-23T15:26:15Z","title":"Requirements Phase"},{"content":"Requirements in Agile ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Kanban, Next - User Stories Some slides courtesy of Joan Smith, Eugene Agichstein, and the Internets.\nWhat is a Requirement? Requirements are the descriptions of the services provided by a system and its operational constraints * It is about WHAT not HOW * It varies greatly. It may range from a high level abstract statement to a detailed mathematical specification * It may be as complex as a 500 pages of description Why we need requirements? Advantages of a complete set of documented requirements\n* Ensures the user (not the developer) drives system functionalities * Helps avoiding confusion and arguments * Helps minimizing the changes which reduces the cost Changes in requirements are expensive. Costs of changing the requirements 3 x as much during the design phase 5-10 x as much during implementation 10-100 x as much after release Code Complete, p30\nRequirements help reduce errors A careful requirements process doesn’t mean there will be no changes later\nAverage project experiences about 25% changes in the requirements\nThis accounts for 70-80% if the rework of the project Code Complete, p40\nImportant to plan for requirements changes\nExample: the case of critical applications Different levels of abstraction Abstract level: User requirements\n* Usually the first attempt for the description of the requirements * Includes services and constraints of the system * Given in natural language or diagrams * Readable by everybody, i.e. understandable by the user * Serve business objectives Example of User requirement: As a user who found a new job announcement, I want to add a new position to the website so s/he can start working on doing the initial research and apply to it.\nDifferent levels of abstraction Not abstract level: System requirements\n* Includes services and constraints of the system in detail * Useful for the design and development * Precise and …","date":-62135596800,"description":"","objectID":"01729c77575845de382e80ebc5b9f9ca","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-requirements/","title":"Requirements in Agile"},{"content":" Teamwork ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - User Stories, Next - Version Control Agile Principles lead to Teamwork The agile process molds to the needs of the people and team\n4. Work Together. Business people and developers must work together daily throughout the project (one team).\n5. Empower \u0026amp;amp; Trust. Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\n6. Face to Face Conversations. The most efficient and effective method of conveying information to and within a development team is face–to–face conversation.\n11. Self-organizing Teams. The best architectures, requirements, and designs emerge from self–organizing teams.\n12. Reflect \u0026amp;amp; Adjust. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\nScrum and Agile Scrum is the most popular agile framework.\nScrum fulfils the vision of the Agile Manifesto by helping individuals and businesses organize their work to\nmaximize collaboration, minimize errors, deliver frequently, and create multiple opportunities to inspect and adapt. Scrum Team People are the focus of Scrum.\nScrum Teams include people with diverse skillsets; each team has all of the capabilities necessary to deliver a piece of functionality from idea to delivery. The CLIENT is part of the TEAM\nThe TEAM is in control of the work performed\nScrum Team Scrum Team includes three roles: Scrum Master, Product Owner, and Development Team.\nThe Scrum Master helps the Scrum Team perform at their highest level. They also protect the team from both internal and external distractions. Scrum Masters hold the Scrum Team accountable to their working agreements, Scrum values, and to the Scrum framework itself.\nThe Product Owner defines the what\u0026amp;ndash;as in what the product will look like and what features it should contain. Product Owner helps build and clarify …","date":-62135596800,"description":"","objectID":"3ec90445a0593eb03a6d3d0e9fcd6d88","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-requirements/chapter-teamwork/","title":"Teamwork"},{"content":"User Stories ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Requirements in Agile, Next - Teamwork User Stories in Agile * The Agile process is driven by customer descriptions of what is required (user scenarios) * Agile Planning begins with the creation of user stories * User Stories are the central focus for developers * User Stories are derived from user/client meeting and describe how the product will be used in very specific ways\n* They are derived from user scenarios and tell WHO can do WHAT and WHY * Analogous to functional requirements * Act as guidelines on how to plan for testing the product User Stories in Agile * Agile team assesses each story and assigns a cost\n* Stories are grouped for a deliverable increment * Complexity of a user story is estimated in Story Points. Story points estimate the relative complexity of satisfying the requirement. * Each user story should imply an acceptance test * Coding: Recommends the construction of a unit test for a story before coding starts * A commitment is made on a delivery date for all the stories of the deliverable increment * User stories should be recorded in virtual or physical cards placed on the team\u0026#39;s working board Examples of User Story Examples taken from http://www.westborosystems.com/2010/02/user-story-examples/\nUser Story might get history during the development Initial Final How to classify each story Team must decide upon the criteria on which to classify each story.\nThen, team must select a way to record the story using these criteria\nExample: I.N.V.E.S.T.\nI – independent, not requiring other features\nN – negotiable, can be excluded, revised, etc\nV – valuable, clearly contributing to product usefulness\nE – estimable, reasonable development estimates can be made from the story\nS – small, stories that are too big tend to be vague and miss some points\nT – testable, stories need to have a means of verifying functionality Developer points * They are …","date":-62135596800,"description":"","objectID":"ba9b60dfdb6db23d03e8a8179b571438","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-requirements/chapter-userstories/","title":"User Stories"},{"content":"Software Security ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Licensing Software, Next - Common Types of Attacks ","date":-62135596800,"description":"","objectID":"011ce7d90c9514cc7fb5913b7066ed13","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-security/","title":"Software Security"},{"content":"Best Practices in Software Security ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Common Types of Attacks, Next - Instructor Materials ","date":-62135596800,"description":"","objectID":"dbca3f58786191712214a54694d8212a","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-security/section-best-practices/","title":"Best Practices in Software Security"},{"content":"Common Types of Attacks ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Software Security, Next - Best Practices in Software Security ","date":-62135596800,"description":"","objectID":"1a81283c840119bac8f4b431011b4684","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-security/section-common-attacks/","title":"Common Types of Attacks"},{"content":"Software Protection ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - The Last Stretch Phase, Next - Intellectual Property Your rights for protecting\nyour software creations We are not here to teach details of the legal code, but these basics will be relevant in the career of any sofware developer.\nDefinitions:\nIntellectual property Establishing protection:\nCopyright Patents Declaring terms for users:\nLicensing Software is intellectual property (IP) Like any other artistic and intellectual creation Can be protected legally Several options to choose from Two major forms of IP protection for software:\nCopyright Patent Copyright Law Copyright is a form of IP protection that gives its owner the right to:\nreproduce the copyrighted work prepare derivative works based upon the work distribute copies of the work to the public perform the copyrighted work publicly display the copyrighted work publicly Copyright protects the expression of an idea, but not the idea itself Copyright protection extends to books, maps, charts, photographs, movies, audio recordings, etc. Components of Software The Copyright Act of 1976 was amended in 1980 to extend copyright protection to computer software What is Software? Literal Elements: Source Code Object Code Non-Literal Elements: program architecture, structure, sequence, organization and computer-user interface Source Code and Object Code Are Protected But What About the GUI? “Look and Feel” of Software Most courts that have examined this issue have sided with the copyright protection of the graphical user interface Rationale: Copyright protection extends not only to the literal elements of a program, i.e., its source and object codes, but also to its protected \u0026amp;ldquo;nonliteral\u0026amp;rdquo; elements, such as the program architecture, structure, sequence, organization and computer-user interface If non-literal element A in Software AA is substantially similar to the non-literal element B in …","date":-62135596800,"description":"","objectID":"2e065a23fb36a64b24fb015bc4bd39f8","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-software-protection/","title":"Software Protection"},{"content":"Intellectual Property ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Software Protection, Next - Licensing Software Establishing Ownership of Intellectual Property As you create software, it becomes intellectual property\nWho determines the ownership of IP? Based on contract, company may own In group work, an signed agreement needs to be made Easiest in class projects is to divide IP equally among members, but up to members to agree Why is it Important to Establish IP? Many creative projects come out of class Most will never become commercialized But some may have merit If any of you would like to take it further in the future, and money is involved, the division of credit becomes very difficult Best to decide as you finalize your project this semester Submit an IP agreement that determines contributions between team, your client, and your professor. More Resources We now have a website with many resources for software protection and licensing: https://ggc-sd.github.io/LegalSoftDevApps/index.html Contains: Example Forms Explanations Guidance Prev - Software Protection, Next - Licensing Software ","date":-62135596800,"description":"","objectID":"476773e1422c16a7a9566b5ae2739e8a","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-software-protection/intellectual-property/","title":"Intellectual Property"},{"content":"Licensing Software ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Intellectual Property, Next - Software Security Enforcing Copyright Requires Licensing Software can be license by owners to: Other programmers (licenses that allow modification and distribution) End-users (limited rights, aka EULA) Contents of Licenses Based on the copyright or copy-left protection option selected for your project Need to come up with a license document that specifies how others can use your product License may need to specify: Type of user (e.g., end user versus developer who wants to adopt and distribute) Any conditions (e.g., put credits before distribution) Commercial use (allowed vs forbidden) How to Select a License for Your Project For open source licenses, see list on Wikipedia. A common and easy method is to use the Creative Commons licenses. For proprietary licenses, there are many types. There are also license generators such as BinPress. Prev - Intellectual Property, Next - Software Security ","date":-62135596800,"description":"","objectID":"55be9cc3251b7fdcdc6cb58b9c5e13d1","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-software-protection/licensing/","title":"Licensing Software"},{"content":"Version Control ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Teamwork, Next - Github Social Computing Why Version Control? It\u0026amp;rsquo;s a must in today\u0026amp;rsquo;s computing industry Mt. Gox, a company that don\u0026amp;rsquo;t use VC and lost almost a billion dollars… Another painful story without VC challenge: find more horror stories! You can even version control documents, class files, financial files, … Also called source control, code management, concurrent versioning, revision control, … Advantages:\nTrack changes, keep logs of past development Automatic backups/safety net Concurrent versions: XP vs. Win8 Allows teamwork Teamwork on the same codebase: How? Seriously, how? Teamwork: No control? Overwrite chaos! Teamwork: Locking Teamwork: Merging Merging example Each commit increments version Github for version control git is the program behind Github Common usage scenario:\ngit clone gets working copy from repo Make changes in local working copy git add \u0026amp;lt;files...\u0026amp;gt; to select your changed files git commit saves your changes into the version control history with a comment (Wash, rinse, and repeat step 2. Commit often!) git push publishes your previous commits to remote repository (Github) git pull receives latest changes from repo to sync Useful commands: Investigating the past git diff shows your changes from last repo version git log [filename] lists all commits, optionally those touching a filename git diff \u0026amp;lt;commit\u0026amp;gt; shows changes in version labeled as \u0026amp;lt;commit\u0026amp;gt; git checkout \u0026amp;lt;commit\u0026amp;gt; rewinds all files back to a version Challenge: How to find a bug You have been messing with the code Suddenly you realized you broke the program How do you find when was the bug introduced? Hint: use git checkout \u0026amp;lt;commit\u0026amp;gt;\nParallel development: branches and merging Many ways to do it, but recommended way:\nmaster or main for releases develop for active development Optional: open one branch per feature, e.g. …","date":-62135596800,"description":"","objectID":"17aeffb5f3818ad789d2b0335cde19ce","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-version-control/","title":"Version Control"},{"content":"Github Social Computing ITEC 3870 Software Development II, Anca Doloc-Mihu and Cengiz Günay (License: CC BY-SA 4.0)\nPrev - Version Control, Next - Project Management with JIRA GitHub usage pattern example: 2048 So many variants! 2048 GitHub page 2048 GitHub page What\u0026amp;rsquo;s forking ?? Stealing from their plate?\nMore like a fork in the road.\nGitHub encourages social computing Common GitHub usage pattern: fork \u0026amp;amp; modify\nFork (clone) someone\u0026amp;rsquo;s project into your account Modify and make it your own Share with original project through “pull requests” Our GitHub usage pattern: push \u0026amp;amp; pull\nSeveral users collaborate on same repo Open GitHub account and we associate you with private project repos Install local client git on Windows, Mac, Linux Clone the repo on your local computer (don\u0026amp;rsquo;t fork on GitHub!) Modify, then push and pull Communicate your pushes with your teammates! (Optional) Make branches and switch between them Our Git workflow is centralized Chacon \u0026amp;amp; Straub\u0026amp;rsquo;s Pro Git book: 5.1 Distributed Git - Distributed Workflows\nAn improved Git workflow: Integration Manager Can we adopt features from integration manager? Yes!\nUse branches Send pull requests (PRs) within the same repo Have someone to review code and accept PR Ultimate Git workflow: Benevolent Dictator A branching model: gitflow Gitflow references Original article: “A successful Git branching model” by Vincent Driessen (2010) and more recent Using git-flow to automate your git branching workflow (2010)\nOr simply use the GitFlow extension to git\nAtlassian Tutorial: Comparing Workflows: Centralized, Feature Branch, Gitflow, Forking Workflows\n","date":-62135596800,"description":"","objectID":"de98cdc066fba8ed9e080f3aa10348e8","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/student/chapter-version-control/github-social-computing/","title":"Github Social Computing"},{"content":"Select a chapter from the menu.\n","date":1636027200,"description":"Workshops Slides and Videos","lastmod":"2021-11-04T12:00:00Z","objectID":"52c708d9dad48db8062d07d6906c18dc","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/","title":"Workshops"},{"content":"","date":-62135596800,"description":"","objectID":"e1adfdec4f1d0f43d1afac9c3e352216","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/angular/","title":"Angular"},{"content":" ","date":-62135596800,"description":"","objectID":"c606ee9d6b0b874f1965388244b15cd2","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/angular/beginner/","title":"Angular Beginner"},{"content":"Angular Components ITEC 3870 Software Development II, Roberto Salas Montoya (License: CC BY-SA 4.0)\nPrev - Angular Beginner, Next - Angular Routing What are Angular Components? Angular Components can be describe as a the most basic building blocks of an Angular application. In simple technical terms a component is just controller for the user interface.\nA component is made of HTML template that declares what is viewed on the page Typescript files that give it behavior just like methods do to a class in java CSS selector that defines how it is used in the view page Let\u0026amp;rsquo;s create an Angular Project In order to create Angular project we must first have Node installed in our system. You can download Node from here.\nOnce Node is installed the next step is to open the terminal and run the next commands to install and create our Angular application.\n$ npm install -g @angular/cli The previous command installed Angular the next command is to create a Project and give it a name.\n$ ng new ComponentsDemo The next command is to run and open our application\n$ cd ComponentsDemo ng serve --open Accessing our Project In order to edit and modify our Angular components application we are going to use Visual Studio Code. Download and install Visual Studio Code.\nWe can open our project in Visual code using the following command in the Terminal.\n$ code . Creating our Components There are two ways to create components in Angular manually and using the Angular CLI\nThe best way according to the Angular docs forms it to create components using the Angular CLI, Which is what we are going to do next.\nFrom the terminal we need to go to our Angular application first once on it we will run the following command.\n$ ng generate component \u0026amp;lt;component name\u0026amp;gt; FIY shoud be replace by the name of your component.\nFirst Container First we\u0026amp;rsquo;ll create and run an Ubuntu container:\n$ docker run -it --rm ubuntu bash where\n-it is short for --interactive --tty which starts the container in …","date":-62135596800,"description":"This workshop will cover the basics of Components in Angular","objectID":"8da5e7d07bd292b667af44f6b733e7e3","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/angular/components/","title":"Angular Components"},{"content":"Angular Routing ITEC 3870 Software Development II, Roberto Salas Montoya (License: CC BY-SA 4.0)\nPrev - Angular Components, Next - Angular Services Overview Introduction, What is routing in Angular?\nCreating a Project that includes the routing module or adding routing module.\nConfigure Route Module Check\nThree step fundamental blocks Route paths Routerlink and link active Router outlet What is Angular routing? Routing in Angular is basically navigating between pages. The Router Module consists of directives and service to implement navigation. In more simple words you could describe it as the function behind the application that lets users move between different screen views.\nCreate an Angular Project In order to create Angular project we must first have Node installed in our system. You can download Node from here.\nOnce Node is installed the next step is to open the terminal and run the next commands to install and create our Angular application.\n$ npm install -g @angular/cli The previous command installed Angular the next command is to create a Project and give it a name.\n$ ng new RoutingDemo Accessing and opening our Project The next command is to run and open our application\n$ cd RoutingDemo $ ng serve --open In order to edit and modify our Angular Routing application we are going to use Visual Studio Code. Download and install Visual Studio Code.\nWe can open our project in Visual code using the following command in the Terminal.\n$ code . Creating Components for Route Demo For the purpose of demonstrating the route configuration we will create two components professorList and studentList. We will use the following two commands to create each component at a time in the Angular CLI.\n$ ng generate component professorList And\n$ ng generate component studentList PRE-CONFIGURING ROUTES 1.0 Assuming you have component views already created we will type the following code to configure our Routes in the AppRoutingModule.ts file.\nFirst import the components that will be …","date":-62135596800,"description":"This workshop will cover the basics of Routing in Angular","objectID":"9f92480e5c53b7b3998b06434e2dec55","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/angular/routing/","title":"Angular Routing"},{"content":"Angular Services\u0026amp;nbsp;(includes video) ITEC 3870 Software Development II, Christopher Martinez (License: CC BY-SA 4.0)\nPrev - Angular Routing, Next - React Workshops Watch video with rest of the slides here: Prerequisites Install NodeJS Command Prompt/Terminal Check node version using the node –v command To check if you have npm run the npm –v to see if it is installed npm install -g @angular/cli to install all Angular CLI NOTE: The command above installs all necessary dependancies Type ng version to check the version of Angular CLI We will use VSCode and Git Bash for this workshop Download content git clone https://github.com/KidLanz/SID.git Command Prompt/Terminal: cd Desktop/demo/SID code . NOTE:this command is to open VSCode through the command line/terminal npm install then npm install -g npm NOTE:this command is to install npm and get the latest version into the folder you have cloned from the repository ng serve -o NOTE:this command is to open the html to the browsers My Repository\nWhy is this code wrong? D.R.Y. - Don\u0026#39;t Repeat Yourself Making copies of the code can use up a lot of memory Revisiting multiple classes to change the same code can be time consuming Modeling - grabbing and Manipulation of Data This is where we interact with the database/communicate with the controller Angular Service Information It is a class that focuses on a specific purpose. Its purpose is to: share data through many components at once. use as a backend in angular to test code. give the possibility to connect to a database if needed Lets get started Making a student.service.ts file (picture needed...) in order to provide the student data, we need the service to handle that\naspect of the code. Making a \u0026#34;Server\u0026#34; using the Http Request and an Observable You will \u0026#34;get\u0026#34; an http request to the \u0026#34;server\u0026#34; to then return as an observable to student.service.ts and to the list and details components. How it works\nHTTP add import { HttpClientModule } from \u0026#39;@angular/common/http\u0026#39;; Add …","date":-62135596800,"description":"","objectID":"93b033c1bf1e840bcec9c8c0ba722b56","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/angular/services/","title":"Angular Services"},{"content":"","date":1636027200,"description":"","lastmod":"2021-11-04T12:00:00Z","objectID":"e85d85d9177efe128c047f32bebd1eae","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/backend/","title":"Back-end Workshops"},{"content":"REST API with ExpressJS Workshop ITEC 3870 Software Development II, Cengiz Gunay (License: CC BY-SA 4.0)\nPrev - Back-end Workshops, Next - Security of Software REST APIs are universal REST stands for \u0026amp;ldquo;Representational State Transfer\u0026amp;rdquo; Allows separating backend data store from frontend logic Can be connected to database, files, or any other data structure A RESTful API can be used by both web and mobile front ends Many resources on web are offered as APIs: Todmotto\u0026amp;rsquo;s list Before creating an API, we will set a backend service Simple ExpressJS Hello World application Following tutorial on TutorialsPoint (lots of ads!) Express is a very widely used backend JS framework Frontend frameworks like Angular and React run in the browser, but Express runs on the server, using Node.JS We will do the first 4 sections in the tutorial, through the section \u0026amp;ldquo;Hello World\u0026amp;rdquo; Follow on down\u0026amp;hellip; Prerequisites Install Node.JS that will also install the Node Package Manager (npm) Test in command prompt or terminal with: node --version npm --version which should give you the installed versions. Create a project folder Run the commands: mkdir hello-world cd hello-world pwd Last command should show that you are inside the new project folder Initialize your Node.JS project Create a package.json file with the following command: npm init -y (if you want control over what goes in it, omit the -y) Start installing Node packages for our project: npm install --save express which will download packages under the node_modules folder (the --save option will make an entry inside the package.json file) Install a global program to run your project: npm install -g nodemon which will install the nodemon utility system-wide (if you are on Mac or Linux, you would need to run this with sudo powers) Your Hello World program Paste this into a new file named index.js (use any text editor): var express = require(\u0026amp;#39;express\u0026amp;#39;); var app = express(); app.get(\u0026amp;#39;/\u0026amp;#39;, …","date":1636027200,"description":"Simple Hello World application, followed by REST API","lastmod":"2021-11-04T12:00:00Z","objectID":"a9e4008604a7b6669e3d72ced3246373","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/backend/express-rest/","publishdate":"2021-11-04T12:00:00Z","title":"REST API with ExpressJS Workshop"},{"content":"","date":1615118400,"description":"","lastmod":"2021-03-07T12:00:00Z","objectID":"89e1371101a86f55db9f18799f6e6ea9","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/devops/","title":"DevOps Workshops"},{"content":"Azure Cloud Workshop ITEC 3870 Software Development II, Cengiz Gunay (License: CC BY-SA 4.0)\nPrev - Docker Workshop, Next - Testing Azure has a student pack $100 credit Also monthly free allotment for many services Including virtual machines, database, app service, and functions Sign up at Azure for Students Tutorial #1: create a virtual machine The most classic usage of cloud Create a copy of a real computer, virtually Similar to running a VM on the side on your laptop We will create a Linux virtual machine Optionally, you could also create Windows and Mac Continue onto page below Start Azure tutorial to create a VM and then follow here Start with this tutorial, but keep this page open for modifications Your Azure sandbox will expire in 1 hour After your search in the Marketplace: Instead of \u0026amp;ldquo;Ubuntu Server 18.04 LTS\u0026amp;rdquo;, select \u0026amp;ldquo;20.04\u0026amp;rdquo; Under \u0026amp;ldquo;Networking\u0026amp;rdquo; tab, select the NIC network security group to None Stop at the end of the page after creating the VM Note the public IP address from Overview tab on Azure Portal Connect to your VM Connect to your VM via SSH: On MacOS, just open a terminal and type (replace username and IP with yours): ssh username@IP On Windows, download Putty and follow instructions (enter only IP address and it will prompt for the username) Once you are connected, follow below in the remote terminal (stop if you fail and ask for help) Install Node.js on VM Install Node.js using APT package manager on Ubuntu: $ sudo apt update $ sudo apt install nodejs $ sudo apt install npm Test your Node version: $ node -v OPTIONAL: Add the Ubuntu PPA set up for up-to-date Node.js packages (will take couple of minutes): $ curl -sL https://deb.nodesource.com/setup_16.x -o nodesource_setup.sh $ sudo bash nodesource_setup.sh Run a Node.js project Use the nano filename to edit a file and paste content into it. Press Control-X to save and exit. Try any of these, but set port to 8080: Example Express Hello World (do npm install …","date":1615118400,"description":"Starting a virtual machine and App Service","lastmod":"2021-03-07T12:00:00Z","objectID":"0367058aaad3f0842f0d852e21cd8020","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/devops/azure/","publishdate":"2021-03-07T12:00:00Z","title":"Azure Cloud Workshop"},{"content":"Docker Workshop\u0026amp;nbsp;(includes video) ITEC 3870 Software Development II, Ryan Cosentino (License: CC BY-SA 4.0)\nPrev - DevOps Workshops, Next - Azure Cloud Workshop Watch video with rest of the slides here: Troubleshooting notes: Windows users may need to install the WSL2 update If Docker cannot turn on Hyper-V, you may need to enter your computer\u0026amp;rsquo;s BIOS setup to turn it on Make sure you have enough space on your hard drive What is Docker? Docker is an OS-level virtualization software that is used to build and run isolated software environments called containers.\nWhat does containerization mean? With virtual machines that you get from VirtualBox, entire operating systems are virtualized. While this allows for greater flexibility, it comes with a considerable performance cost. On the other hand, containerization (which is a type of OS-level virtualization) involves isolating running processes at the OS level, meaning that while processes are in a way isolated from one another, they still share the same underlying operating system with the host.\n(Image Source)\nIn a way Docker is similar to virtual desktops in Windows or macOS where you can isolate open windows into different desktops. Although the windows in one desktop are isolated from those in another, they are still ordinary programs and not at all \u0026amp;ldquo;virtualized\u0026amp;rdquo; in the virtual machine sense. In this example different windows are isolated with help from the window manager, however with Docker processes are isolated at the kernel level. The specific technologies that make this possible will be summarized at the end.\nInstalling Docker First download and install Docker Desktop.\nIn order to use the Docker command line client, Docker Desktop must be running. To verify that Docker is installed and running, run the following in your terminal:\n$ docker version The output should contain a section for\nClient: Docker Engine - Community, and Server: Docker Engine - Community Images and Containers Images are …","date":-62135596800,"description":"This workshop will cover the basics of Docker","objectID":"4487778875e6729feae7d66280b3b420","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/devops/docker/","title":"Docker Workshop"},{"content":"","date":-62135596800,"description":"","objectID":"223e67d77623f002bab7b7f3da732738","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/git/","title":"Git"},{"content":"By Shaun Mitchell\nSee the slides for the video below ","date":-62135596800,"description":"","objectID":"bc45bb5c3fb7537aca89d361768932a1","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/git/branching-github/","title":"Git log, branch, stash, rebase, and merge"},{"content":"Python for Beginners ITEC 3870 Software Development II, Safiyullah Khan (License: CC BY-SA 4.0)\nPrev - Intermediate Python, Next - Chapters ","date":-62135596800,"description":"","objectID":"a878cb91f3a267a94c0442104e698b60","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/python/beginner/","title":"Python for Beginners"},{"content":"Intermediate Python ITEC 3870 Software Development II, Safiyullah Khan (License: CC BY-SA 4.0)\nPrev - Python Workshops, Next - Python for Beginners ","date":-62135596800,"description":"","objectID":"ce525c4eec48a37f82fdc5b76c83f391","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/python/intermediate/","title":"Intermediate Python"},{"content":"","date":-62135596800,"description":"","objectID":"90b287777dc790f84bfc307480fa718f","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/python/","title":"Python Workshops"},{"content":"React for Beginners ITEC 3870 Software Development II, Alex Abraham and Cengiz Gunay (License: CC BY-SA 4.0)\nPrev - React Workshops, Next - React Authentication with Firebase Workshop What is React Js? A JavaScript library for building user interfaces for web as well as mobile applications developed by a team at Facebook in 2011.\nIt is an open-source, reusable component based front-end library In a Model View Controller (MVC) architecture, React is the \u0026amp;ldquo;View\u0026amp;rdquo; which is responsible for how the app \u0026amp;ldquo;looks and feels\u0026amp;rdquo;. However, more accurately, it is strictly not MVC and instead uses the Flux pattern. As of 2022, it is one of the most popular libraries for building Javascript libraries. Components Component = A piece of the UI\nIndependent, isolated, and reuable components, which become the building blocks to a more complex user interface.\nIn react, webpages are just the combination of many children components.\nApp: Root Component Every React application has at least one component known as the Root Component (Most of the time named the App component).\nThis component represents the entire application and is where all the child components are displayed.\nHere we see several components\nNavBar Feed Who to Follow Profile dashboard Trends Twitter Site Take a look at all the components (which are all the rectangles with red borders).\nThe App (or root component) Component is the page itself that is displaying all the components.\nGetting started! - Install NodeJS NodeJS download link\nIt will install the tools npm, to install 3rd party plugins, and npx, for running tools.\nnpm is the node package manager, and npx is the package runner that allows us to run programs without installing. Set up your environment (IDE) Visual Studio Code download link\nTest your environment and create an app Open your command prompt/terminal on Windows/Mac:\n$ node -v This is to see our version of Node.js on our device, if there\u0026amp;rsquo;s an error, it didnt succesfully download.\nCreate …","date":-62135596800,"description":"","objectID":"f20c6f6d18bdc15acad57b8ecc8f8f44","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/react/beginner/","title":"React for Beginners"},{"content":" React.JS is a JavaScript library for building user interfaces, for web as well as mobile applications.\n","date":-62135596800,"description":"","objectID":"efa37702d058c219802dc999e43cc7d5","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/react/","title":"React Workshops"},{"content":"React Authentication with Firebase Workshop\u0026amp;nbsp;(includes video) ITEC 3870 Software Development II, Keyvan Shabani (License: CC BY-SA 4.0)\nPrev - React for Beginners, Next - Back-end Workshops Watch video with rest of the slides here: Note: To follow instructions in video, clone this starter repo\nExample:\ngit clone https://github.com/soft-eng-practicum/react-auth-firebase-workshop.git What is React? React.js is an open-source JavaScript library that is used for building user interfaces specifically for single-page applications. It’s used for handling the view layer for web and mobile apps. React also allows us to create reusable UI components. React was first created by Jordan Walke, a software engineer working for Facebook. React first deployed on Facebook’s newsfeed in 2011 and on Instagram in 2012.\nWhy to use React? ReactJS is just simpler to grasp right away. The component-based approach, well-defined lifecycle, and use of just plain JavaScript make React very simple to learn, build a professional web (and mobile applications), and support it. React uses a special syntax called JSX which allows you to mix HTML with JavaScript. This is not a requirement; Developer can still write in plain JavaScript but JSX is much easier to use.\nWhat is Firebase? Firebase is a Backend-as-a-Service (Baas). It provides developers with a variety of tools and services to help them develop quality apps, grow their user base, and earn profit. It is built on Google’s infrastructure. Firebase is categorized as a NoSQL database program, which stores data in JSON-like documents.\nWhat are the key features? Authentication Realtime database Hosting Notifications Now it is time to create a React project In order to create a react app, you must have Node installed on your device. If you do not have Node, download from here.\nIf you cloned the starter repo, open a terminal and do:\ncd react-auth-firebase-workshop npm install npm start (it may give a few errors and open a blank web page)\nIf you …","date":-62135596800,"description":"This workshop will authentication with React and Firebase","objectID":"d99bd8f1f59633c42232e2b19a7bcdaa","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/react/authentication-with-firebase/","title":"React Authentication with Firebase Workshop"},{"content":"Workshop: TBA ","date":-62135596800,"description":"","objectID":"c1996e68c6a68d39517e72e0e7b1d2e8","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/security/","title":"Security of Software"},{"content":"","date":-62135596800,"description":"","objectID":"487dcf193a511ec445a3d1baf4f68209","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/testing/","title":"Testing"},{"content":" ","date":-62135596800,"description":"","objectID":"4441d96d77b1d0be85ec53df67f1056c","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/testing/selenium/","title":"Website Testing with Selenium WebDriver"},{"content":"","date":-62135596800,"description":"","objectID":"2f406577417757e635652847b386a218","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/web-basics/","title":"Web Basics"},{"content":" Welcome to the Bootstrap Workshop Ryan Cosentino\nGoal The goal of this workshop is to use Bootstrap and jQuery to create a form that can add or remove courses from a table:\nWhat is Bootstrap? Bootstrap is a widely used CSS framework that can be used to easily and consistently style HTML elements using CSS and (optionally) JavaScript. Bootstrap contains styled components for buttons, cards, dropdowns, input groups, navigation bars, tooltips, and many others, along with utility classes for common CSS properties.\nBootstrap was originally developed at Twitter for their internal web applications but was eventually released to the public as an open source project in 2011.\nBootstrap\u0026amp;rsquo;s documentation can be found here and their source code (GitHub) here.\n\u0026amp;ldquo;Installing\u0026amp;rdquo; Bootstrap Similar to jQuery, while Bootstrap can be downloaded and used locally, it is commonly accessed via a CDN (content delivery network).\nVisit the following link and replace the default HTML in the editor with the following:\n\u0026amp;lt;!DOCTYPE html\u0026amp;gt; \u0026amp;lt;html\u0026amp;gt; \u0026amp;lt;head\u0026amp;gt; \u0026amp;lt;meta charset=\u0026amp;#34;utf-8\u0026amp;#34;\u0026amp;gt; \u0026amp;lt;meta name=\u0026amp;#34;viewport\u0026amp;#34; content=\u0026amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026amp;#34;\u0026amp;gt; \u0026amp;lt;title\u0026amp;gt;Add Courses to Table\u0026amp;lt;/title\u0026amp;gt; \u0026amp;lt;link rel=\u0026amp;#34;stylesheet\u0026amp;#34; href=\u0026amp;#34;https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\u0026amp;#34;\u0026amp;gt; \u0026amp;lt;/head\u0026amp;gt; \u0026amp;lt;body class=\u0026amp;#34;container-fluid\u0026amp;#34;\u0026amp;gt; \u0026amp;lt;script src=\u0026amp;#34;https://code.jquery.com/jquery-3.5.1.min.js\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/script\u0026amp;gt; \u0026amp;lt;script\u0026amp;gt; // Your Code \u0026amp;lt;/script\u0026amp;gt; \u0026amp;lt;/body\u0026amp;gt; \u0026amp;lt;/html\u0026amp;gt; \u0026amp;ldquo;Installing\u0026amp;rdquo; Bootstrap Clicking the \u0026amp;ldquo;Run\u0026amp;rdquo; button will load your HTML.\nThe \u0026amp;lt;link\u0026amp;gt; tag downloads the Bootstrap CSS styles. Note that some components need JavaScript and require an additional script tag, however we won\u0026amp;rsquo;t we using those components here.\nSpacing Classes One of the most helpful Bootstrap utility CSS classes are those made for setting padding and …","date":-62135596800,"description":"This workshop will cover the Bootstrap CSS framework","objectID":"3184b140ef8d6bc3f81ab029b5d4f4f5","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/web-basics/bootstrap/","title":"Bootstrap Workshop"},{"content":"Welcome to the jQuery Workshop Ryan Cosentino\nWhat is jQuery? jQuery is a widely used JavaScript library that provides easy DOM and CSS manipulation, event handling, AJAX requests, animation, and more. As of May 2019, jQuery is used by 73% of the 10 million most viewed websites.\njQuery\u0026amp;rsquo;s documentation can be found here and source code here.\nWhy jQuery? While most features available in jQuery are also available with standard JavaScript, jQuery\u0026amp;rsquo;s methods are often easier to use and more concise.\nOne additional benefit of using jQuery methods is that they take subtle browser differences into account. Specifically, a jQuery method might be implemented differently on Chrome vs IE 11 in order to achieve the same effect. If you use plain JavaScript you would need to take these browser differences into account yourself in order to achieve the same level of cross browser compatibility.\n\u0026amp;ldquo;Installing\u0026amp;rdquo; jQuery While jQuery can be downloaded and used locally, it is commonly accessed via a CDN (content delivery network). One is provided by the jQuery website, although companies like Google and Microsoft also provide their own as a public service.\nVisit the following link and replace the default HTML in the editor with the following:\n\u0026amp;lt;!DOCTYPE html\u0026amp;gt; \u0026amp;lt;html\u0026amp;gt; \u0026amp;lt;head\u0026amp;gt; \u0026amp;lt;meta charset=\u0026amp;#34;utf-8\u0026amp;#34;\u0026amp;gt; \u0026amp;lt;title\u0026amp;gt;My Page\u0026amp;lt;/title\u0026amp;gt; \u0026amp;lt;/head\u0026amp;gt; \u0026amp;lt;body\u0026amp;gt; \u0026amp;lt;h1\u0026amp;gt;My Page\u0026amp;lt;/h1\u0026amp;gt; \u0026amp;lt;p\u0026amp;gt;Welcome to my page!\u0026amp;lt;/p\u0026amp;gt; \u0026amp;lt;script src=\u0026amp;#34;https://code.jquery.com/jquery-3.5.1.min.js\u0026amp;#34;\u0026amp;gt;\u0026amp;lt;/script\u0026amp;gt; \u0026amp;lt;script\u0026amp;gt; // Your Code \u0026amp;lt;/script\u0026amp;gt; \u0026amp;lt;/body\u0026amp;gt; \u0026amp;lt;/html\u0026amp;gt; Then click the \u0026amp;ldquo;Run\u0026amp;rdquo; button. The first \u0026amp;lt;script\u0026amp;gt; tag loads jQuery.\nThe jQuery Constructor A major component of jQuery is the constructor jQuery which creates and returns jQuery objects. This is the primary means of interacting with jQuery.\nWhile you can always access the function with the name jQuery, the single-character alias $ is commonly …","date":-62135596800,"description":"This workshop will cover the basics of jQuery","objectID":"f1bb73c912facd825d17a0d50933bfb7","permalink":"https://soft-eng-practicum.github.io/softdev2-resources/workshops/web-basics/jquery/","title":"jQuery Workshop"}]